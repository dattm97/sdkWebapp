{"version":3,"file":"static/js/445.3e6b4159.chunk.js","mappings":"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","sources":["features/bank/add-bank/components/AddNewBankStep1.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useRef, useState } from 'react';\nimport { Box, Button, Fade, Typography } from '@mui/material';\nimport Header from 'components/Layout/Header';\nimport { FullSizeFlexBox } from 'components/styled';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport CustomInput from 'components/CustomInput';\nimport { CustomInputHandle } from 'components/CustomInput/types';\nimport { LayoutSafeArea } from 'components/Layout/LayoutSafeArea';\nimport { useAppSelector } from 'app/hooks';\nimport { selectDeviceInfo } from 'app/app.slice';\nimport { formatCardNumber, removeSpaces } from 'utils/format-utils';\nimport useDebounce from 'hooks/useDebounce';\nimport { selectBankList, selectLoading } from 'features/bank/states/bank.slice';\nimport { useDispatch } from 'react-redux';\nimport { bankSagaAction } from 'features/bank/states/bank.saga';\nimport { CallbackDetectBankResponse } from 'features/bank/states/bank.types';\nimport alertDialogStore from 'components/AlertDialog/alertDialogStore';\nimport { jsLog } from 'utils/comunicate';\nimport Loading from 'components/Loading';\nimport { getInputType } from 'utils/bank-utils';\n\ntype Callback = () => void\n\nexport default function AddNewBankStep1() {\n  const listBank = useAppSelector(selectBankList)\n  const deviceInfo = useAppSelector(selectDeviceInfo)\n  const loading = useAppSelector(selectLoading)\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const [searchParams] = useSearchParams();\n  const numberRef = useRef<CustomInputHandle>(null);\n  const type = searchParams.get('type')\n  const id = searchParams.get('id')\n\n  const [value, setValue] = useState('')\n  const valueDebounce = useDebounce(value, 1000);\n  const [disableButton, setDisableButton] = useState(true)\n\n  const bankMatched = listBank?.find(it => it.id.toString() === id)\n\n  useEffect(() => {\n    if (type === 'cardNumber') {\n      //Auto detect\n      if (value.length >= ((bankMatched?.cardNumberLength || 16) + 3))\n        handleDetectBank()\n    }\n  }, [valueDebounce])\n\n  const handleDetectBank = (callback?: Callback) => {\n    if (type !== 'credit') {\n      dispatch(bankSagaAction.detectBank({\n        cardNumber: removeSpaces(numberRef.current?.value as string || ''),\n        swiftCode: bankMatched?.swiftCode,\n        type: 'LINKED'\n      }, (status: boolean, response: CallbackDetectBankResponse) => {\n        if (status) {\n          if (response.code === 204900) {\n            jsLog(`Detect bank - ${response.data.fullname}`)\n            if (response.data.fullname) {\n              handleContinueAddBank(response.data.fullname)\n            }\n          } else if (response.code === 204901) {\n            numberRef.current?.showError()\n            numberRef.current?.setErrorMessage(response.message)\n          } else {\n            if (callback) { //Không auto\n              callback()\n              return\n            }\n            alertDialogStore.alertContent = {\n              title: 'Lỗi',\n              subtitle: response.message,\n              firstButtonTitle: 'Đã hiểu'\n            }\n          }\n        }\n      }))\n    } else {\n      handleContinueAddBank()\n    }\n  }\n\n  const onCardNumberChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (getInputType(type || '', event.target.value) === 'account') {\n      if (event.target.value.length > 9) {\n        setDisableButton(false)\n      }\n      else {\n        setDisableButton(true)\n      }\n      return event.target.value\n    }\n    const fmValue = formatCardNumber(event.target.value, ' ')\n    setValue(fmValue)\n    if (fmValue) {\n      setDisableButton(false)\n    } else {\n      setDisableButton(true)\n    }\n    return fmValue\n  }\n\n  const getMethodName = () => {\n    switch (type) {\n      case 'account':\n        return t('bank.bankAccountNumber');\n      case 'both':\n        return `${t('bank.bankAccountNumber')}/${t(\n          'bank.bankCardNumber'\n        ).toLowerCase()}`;\n      case 'cardNumber': return t('bank.bankCardNumber');\n      case 'credit': return t('bank.creditNumber');\n      default:\n        return t('bank.bankCardNumber');\n    }\n  };\n\n  const getPlaceHolder = () => {\n    switch (type) {\n      case 'account':\n        return t('bank.placeHolderAccountNumber');\n      case 'both':\n        return `${t('bank.placeHolderBoth')}`;\n      case 'cardNumber': return t('bank.placeHolderCardNumber');\n      case 'credit': return t('bank.placeHolderCredit');\n      default:\n        return t('bank.placeHolderCardNumber');\n    }\n  };\n\n  const handleContinueAddBank = (fullname?: string) => {\n    navigate(`/add-bank?type=${type || ''}&id=${id || ''}&cardNumber=${numberRef.current?.value || ''}&fullname=${fullname || ''}`)\n  }\n\n  return (\n    <LayoutSafeArea>\n      <FullSizeFlexBox\n        p={2.5}\n        pt={deviceInfo?.platform?.toUpperCase() === 'IOS' || deviceInfo?.platform?.toUpperCase() === 'ANDROID' ? 0 : 2.5}\n        pb={deviceInfo?.platform?.toUpperCase() === 'IOS' || deviceInfo?.platform?.toUpperCase() === 'ANDROID' ? 0 : 2.5}\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n      >\n        <Box>\n          <Header isIconBack onClick={() => navigate(-1)} />\n          <Box pt={2.5} />\n          <CustomInput\n            ref={numberRef}\n            label={getMethodName()}\n            onChange={onCardNumberChange}\n            placeholder={getPlaceHolder()}\n            inputProps={{ inputMode: 'numeric', maxLength: bankMatched?.cardNumberLength ? (bankMatched.cardNumberLength + 3) : 19 }}\n            autoFocus\n            disabled={loading}\n          />\n          <Box pt={3} />\n        </Box>\n        <Box width=\"100%\" display=\"flex\" flexDirection=\"column\">\n          <Button\n            title={t('bank.addBank')}\n            variant='contained'\n            disableElevation\n            onClick={() => handleDetectBank(handleContinueAddBank)}\n            disabled={disableButton}\n          >\n            {t('continue')}\n          </Button>\n        </Box>\n      </FullSizeFlexBox>\n      <Loading\n        label='Đang kiểm tra'\n        show={type !== 'cardNumber' && loading}\n      />\n    </LayoutSafeArea>\n  );\n}\n"],"names":["AddNewBankStep1","listBank","useAppSelector","selectBankList","deviceInfo","selectDeviceInfo","loading","selectLoading","dispatch","useDispatch","navigate","useNavigate","t","useTranslation","useSearchParams","searchParams","numberRef","useRef","type","get","id","useState","value","setValue","valueDebounce","useDebounce","disableButton","setDisableButton","bankMatched","find","it","toString","useEffect","length","cardNumberLength","handleDetectBank","callback","bankSagaAction","cardNumber","removeSpaces","current","swiftCode","status","response","code","jsLog","data","fullname","handleContinueAddBank","showError","setErrorMessage","message","alertDialogStore","title","subtitle","firstButtonTitle","p","pt","platform","toUpperCase","pb","display","flexDirection","justifyContent","isIconBack","onClick","ref","label","toLowerCase","getMethodName","onChange","event","getInputType","target","fmValue","formatCardNumber","placeholder","getPlaceHolder","inputProps","inputMode","maxLength","autoFocus","disabled","width","variant","disableElevation","show"],"sourceRoot":""}