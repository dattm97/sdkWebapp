{"version":3,"file":"static/js/599.977fe51a.chunk.js","mappings":"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","sources":["features/auth/login-step-2/component/Biometric.tsx","features/auth/login-step-2/component/LoginStep2.tsx","features/auth/login-step-2/index.ts","utils/greeting-utils.ts"],"sourcesContent":["import { selectBiometric, selectDeviceInfo } from 'app/app.slice';\nimport { bridge } from 'app/communicateBridge';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { BiometricTypeButton } from 'components/BiometricTypeButton';\nimport biometricStore from 'components/BiometricTypeButton/biometricStore';\nimport { updateToken } from 'features/auth/states/auth/auth.slice';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsLog } from 'utils/comunicate';\n\nexport const Biometric = () => {\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n  const deviceInfo = useAppSelector(selectDeviceInfo)\n  const biometric = useAppSelector(selectBiometric)\n\n  const onSuccess = () => {\n    // pass sinh trắc ở màn hình Login 2\n    if (biometric.biometricKey) {\n      jsLog(`sinh trắc pass ${JSON.stringify(biometric.biometricKey)}`)\n      dispatch(updateToken(biometric.biometricKey))\n      navigate('/home', { replace: true })\n    }\n  }\n\n  useEffect(() => {\n    if (deviceInfo.biometric?.isSupport && biometric.biometricKey && biometric.isEnabled) {\n      biometricStore.callback = { onSuccess }\n      bridge.next({\n        type: 'jsBiometricAuthentication',\n        data: {\n          description: 'Cần sinh trắc để tiếp tục',\n          cancelTitle: 'Huỷ'\n        }\n      })\n    }\n  }, [deviceInfo, biometric])\n\n  return <BiometricTypeButton\n    callback={{ onSuccess }}\n  />\n}","/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { useRef } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Avatar, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport Meta from 'components/Meta';\nimport { FullSizeFlexBox } from 'components/styled';\nimport VerifyOTP from 'components/VerifyOTP';\nimport OTPInput from 'components/OTPInput';\nimport Header from 'components/Layout/Header';\nimport { LayoutSafeArea } from 'components/Layout/LayoutSafeArea';\nimport { getGreetingName } from 'utils/greeting-utils';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { selectClientId, selectDeviceInfo } from 'app/app.slice';\nimport ClickableText from 'components/ClickableText';\nimport { authSagaAction } from 'features/auth/states/auth/auth.saga';\nimport { selectAccountInfo, updateAccountInfo } from 'features/auth/states/account/account.slice';\nimport { SHA256 } from 'crypto-js';\nimport { CallbackForgotPassVerifyOTPResponse, CallbackLoginResponse, CallbackSendActiveCodeResponse } from 'features/auth/states/auth/auth.types';\nimport { selectLoading, updateToken } from 'features/auth/states/auth/auth.slice';\nimport alertDialogStore from 'components/AlertDialog/alertDialogStore';\nimport { OTPHandle } from 'components/OTPInput/types';\nimport { VerifyOTPHandle } from 'components/VerifyOTP/types';\nimport { formatSecondToMin, hidePhoneNumber } from 'utils/format-utils';\nimport { TYPE_ACTIVE_CODE } from 'features/auth/states/auth/auth.types';\nimport { bridge } from 'app/communicateBridge';\nimport { useAvatar } from 'hooks/useAvatar';\nimport { Biometric } from './Biometric';\nimport { jsLog } from 'utils/comunicate';\nimport callCustomerCare from 'utils/callCustomerCare';\n\nfunction LoginStep2() {\n  const dispatch = useAppDispatch()\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const deviceInfo = useAppSelector(selectDeviceInfo)\n  const clientId = useAppSelector(selectClientId)\n  const accountInfo = useAppSelector(selectAccountInfo)\n  const loading = useAppSelector(selectLoading)\n\n  const otpRef = useRef<OTPHandle>(null)\n  const verifyOTPRef = useRef<VerifyOTPHandle>(null)\n\n  const activeCode = searchParams.get('activeCode') || ''\n\n  const handleForgetPin = (value?: string) => {\n    if (value) {\n      dispatch(authSagaAction.forgotPassVerifyOTP({\n        phone: accountInfo?.phone,\n        clientId,\n        activeCode: value\n      }, (status: boolean, response: CallbackForgotPassVerifyOTPResponse) => {\n        if (status) {\n          if (response.code === 200300) {\n            navigate(`/reset-pin?confirmCode=${response.data.confirmCode}`)\n          } else if (response.code === 200302) {\n            navigate('/verify-bank?type=cardNumber')\n          } else if (response.code === 200304) {\n            navigate('/verify-bank?type=accountNumber')\n          } else if (response.code === 200309) {\n            const remainingTime = formatSecondToMin(response.data.remainingTime || 0)\n            alertDialogStore.alertContent = {\n              title: `Bạn đã nhập sai OTP ${response.data.times || 'nhiều'} lần`,\n              subtitle: ['Nhận OTP mới sau', remainingTime, 'hoặc liên hệ CSKH ngay để được hỗ trợ.'],\n              firstButtonTitle: 'Liên hệ CSKH',\n              secondButtonTitle: 'Thử lại sau',\n              reverseButton: true,\n              onClickFirstButton: () => callCustomerCare(),\n              onClickSecondButton: () => verifyOTPRef.current?.close()\n            }\n          } else {\n            verifyOTPRef.current?.setErrorMessage(response.message)\n            verifyOTPRef.current?.showError()\n          }\n        } else {\n          alertDialogStore.alertContent = {\n            title: 'Lỗi kết nối',\n            subtitle: response.message,\n            firstButtonTitle: 'Đã hiểu'\n          }\n        }\n      }))\n    }\n  };\n\n  const handleLogin = (value?: string) => {\n    if (value) {\n      dispatch(authSagaAction.login({\n        phone: accountInfo?.phone,\n        password: SHA256(value).toString(),\n        clientId,\n        activeCode\n      }, (status: boolean, response: CallbackLoginResponse) => {\n        if (status) {\n          if (response.code === 200000) {\n            dispatch(updateToken(response.data.accessToken))\n\n            navigate('/home', { replace: true })\n          } else if (response.code === 200004 || response.code === 200011) {\n            const remainingTime = formatSecondToMin(response.data.remainingTime || 0)\n            alertDialogStore.alertContent = {\n              title: 'Tạm khoá PayME PIN',\n              subtitle: [`Bạn đã nhập sai PayME PIN ${response.data.times || 'nhiều'} lần.\\nThử lại sau`, remainingTime],\n              firstButtonTitle: 'Đã hiểu',\n            }\n          } else if (response.code === 200005) {\n            alertDialogStore.alertContent = {\n              title: 'Tài khoản của bạn đã bị khoá',\n              subtitle: 'Liên hện CSKH ngay để được hỗ trợ',\n              firstButtonTitle: 'Liên hệ CSKH',\n              onClickFirstButton: () => callCustomerCare(),\n            }\n          } else {\n            otpRef.current?.setErrorMessage(response.message)\n            otpRef.current?.showError?.()\n          }\n        } else {\n          alertDialogStore.alertContent = {\n            title: 'Lỗi kết nối',\n            subtitle: response.message,\n            firstButtonTitle: 'Đã hiểu'\n          }\n        }\n      }))\n    }\n  }\n\n  return (\n    <LayoutSafeArea>\n      <Meta title=\"Login Step 2\" />\n      <FullSizeFlexBox\n        sx={{\n          padding: 2.5,\n          paddingTop: deviceInfo?.platform?.toUpperCase() === 'IOS' || deviceInfo?.platform?.toUpperCase() === 'ANDROID' ? 0 : 2.5,\n          backgroundImage: 'url(images/backgroundLogin.svg)',\n          backgroundRepeat: 'no-repeat',\n          resize: 'both',\n          backgroundPosition: 'center top',\n          backgroundSize: 'cover',\n          // backgroundAttachment: 'fixed'\n        }}\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n      >\n        <Box sx={{ paddingTop: 5 }}>\n          <Header />\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Avatar\n              src={useAvatar(accountInfo?.avatar)}\n              sx={{ width: 64, height: 64, alignSelf: 'center' }}\n            />\n          </Box>\n          <Box sx={{ paddingTop: 2 }} />\n          <Typography variant='h3'>\n            {t('auth.Hello')} {getGreetingName(accountInfo?.fullname ?? '--')}\n          </Typography>\n          <Typography variant='subtitle1' sx={{ textAlign: 'center' }}>\n            {t('auth.enterPinToContinue')}\n          </Typography>\n          <Box sx={{ paddingTop: 6 }} />\n          <OTPInput ref={otpRef} numOfCell={6} value=\"\" isPassword onFilled={handleLogin} loading={loading} />\n          <Box sx={{ paddingTop: 3 }} />\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n          >\n            <ClickableText\n              value={t('auth.forgotPin')}\n              onClick={() => {\n                dispatch(authSagaAction.sendActiveCode({\n                  phone: accountInfo?.phone,\n                  clientId,\n                  type: TYPE_ACTIVE_CODE.FORGOT_PASSWORD\n                }, (status: boolean, response: CallbackSendActiveCodeResponse) => {\n                  if (status) {\n                    if (response.code === 204200) {\n                      verifyOTPRef.current?.open()\n                      verifyOTPRef.current?.setExpired(new Date().getTime() + (1 * 60000))\n                    } else if (response.code === 204203) {\n                      verifyOTPRef.current?.open()\n                      verifyOTPRef.current?.setExpired(new Date().getTime() + (response.data.remainingTime || (1 * 60000)))\n                    } else {\n                      alertDialogStore.alertContent = {\n                        title: 'Lỗi kết nối',\n                        subtitle: response.message,\n                        firstButtonTitle: 'Đã hiểu'\n                      }\n                    }\n                  }\n                }))\n              }}\n            />\n            <ClickableText\n              value={t('auth.changePhone')}\n              onClick={() => {\n                dispatch(updateAccountInfo(null))\n                bridge.next({\n                  type: 'jsPreferences',\n                  data: {\n                    accountInfo: null\n                  }\n                })\n                jsLog({ accountInfo: null })\n                navigate('/login')\n              }}\n            />\n          </Box>\n        </Box>\n        <Biometric />\n      </FullSizeFlexBox>\n      <VerifyOTP\n        ref={verifyOTPRef}\n        title=\"Xác thực OTP\"\n        subtitle={`Bạn hãy nhập OTP được gửi tới số ${hidePhoneNumber(accountInfo?.phone ?? '')} để xác thực.`}\n        onSubmit={handleForgetPin}\n        onResend={() => {\n          dispatch(authSagaAction.sendActiveCode({\n            phone: accountInfo?.phone,\n            clientId,\n            type: TYPE_ACTIVE_CODE.FORGOT_PASSWORD\n          }, (status: boolean, response: CallbackSendActiveCodeResponse) => {\n            if (status) {\n              if (response.code === 204200) {\n                verifyOTPRef.current?.setExpired(new Date().getTime() + (1 * 60000))\n              } else if (response.code === 204203) {\n                verifyOTPRef.current?.setExpired(new Date().getTime() + (response.data.remainingTime || (1 * 60000)))\n              } else if (response.code === 204207) {\n                const remainingTime = formatSecondToMin(response.data.remainingTime || 0)\n                alertDialogStore.alertContent = {\n                  title: `Bạn đã nhập sai OTP ${response.data.times || 'nhiều'} lần`,\n                  subtitle: ['Nhận OTP mới sau', remainingTime, 'hoặc liên hệ CSKH ngay để được hỗ trợ.'],\n                  firstButtonTitle: 'Liên hệ CSKH',\n                  secondButtonTitle: 'Thử lại sau',\n                  reverseButton: true,\n                  onClickFirstButton: () => callCustomerCare(),\n                  onClickSecondButton: () => verifyOTPRef.current?.close()\n                }\n              } else {\n                alertDialogStore.alertContent = {\n                  title: 'Lỗi kết nối',\n                  subtitle: response.message,\n                  firstButtonTitle: 'Đã hiểu'\n                }\n              }\n            }\n          }))\n        }}\n      />\n    </LayoutSafeArea>\n  );\n}\n\nexport default LoginStep2;\n","import LoginStep2 from './component/LoginStep2';\n\nexport default LoginStep2","export const getTextGreetings = () => {\n  const h = new Date().getHours();\n  if (h >= 0 && h < 11) return 'auth.goodMorning'\n  if (h < 14) return 'auth.goodAfternoon1'\n  if (h < 18) return 'auth.goodAfternoon2'\n  return 'auth.goodEvening'\n}\n\nexport const getGreetingName = (name: string) : string => {\n  const text = name.split(' ')\n  if (text.length <= 2) return name || ''\n\n  return text.slice(-2).join(' ')\n}\n"],"names":["Biometric","dispatch","useAppDispatch","navigate","useNavigate","deviceInfo","useAppSelector","selectDeviceInfo","biometric","selectBiometric","onSuccess","biometricKey","jsLog","JSON","stringify","updateToken","replace","useEffect","isSupport","isEnabled","biometricStore","bridge","type","data","description","cancelTitle","BiometricTypeButton","callback","useSearchParams","searchParams","t","useTranslation","clientId","selectClientId","accountInfo","selectAccountInfo","loading","selectLoading","otpRef","useRef","verifyOTPRef","activeCode","get","LayoutSafeArea","Meta","title","sx","padding","paddingTop","platform","toUpperCase","backgroundImage","backgroundRepeat","resize","backgroundPosition","backgroundSize","display","flexDirection","justifyContent","Box","Header","Avatar","src","useAvatar","avatar","width","height","alignSelf","Typography","variant","getGreetingName","fullname","textAlign","OTPInput","ref","numOfCell","value","isPassword","onFilled","authSagaAction","phone","password","SHA256","toString","status","response","code","accessToken","remainingTime","formatSecondToMin","alertDialogStore","subtitle","times","firstButtonTitle","onClickFirstButton","callCustomerCare","current","setErrorMessage","message","showError","ClickableText","onClick","TYPE_ACTIVE_CODE","open","setExpired","Date","getTime","updateAccountInfo","VerifyOTP","hidePhoneNumber","onSubmit","confirmCode","secondButtonTitle","reverseButton","onClickSecondButton","close","onResend","getTextGreetings","h","getHours","name","text","split","length","slice","join"],"sourceRoot":""}