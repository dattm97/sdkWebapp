{"version":3,"file":"static/js/479.61277514.chunk.js","mappings":"2SA2BA,MAvBA,SAAqB,GAAkC,IAAjCA,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAC3B,OACE,SAACC,EAAA,EAAI,CAACC,IAAI,EAAK,UACb,UAAC,KAAO,CACJC,MAAM,OACNC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,EAAG,IAAI,WAEX,SAACC,EAAA,EAAU,CAACC,QAAQ,KAAI,SAAEV,GAAS,MACnC,SAACW,EAAA,EAAG,CAACC,GAAI,KACT,SAACH,EAAA,EAAU,CAACC,QAAQ,YAAW,SAAET,GAAY,SAInD,ECkEA,ICpFA,EDOA,WACE,IAAQY,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,UACjB,GAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,MAChCC,EAAAA,EAAAA,YAAU,WAGR,OAFAC,IAEO,WACLC,OAAOC,cAAcR,EAASS,QAChC,CACF,GAAG,IAEH,IAAMC,EAAe,WAErB,EAEMJ,EAAY,WAChB,IAAIK,EAAO,GAEXX,EAASS,QAAUF,OAAOK,aAAY,WACvB,IAATD,IACFJ,OAAOC,cAAcR,EAASS,SAC9BI,EAAAA,EAAAA,aAAgC,CAC9B9B,MAAOa,EAAE,sBACTZ,SAAUY,EAAE,yBACZkB,iBAAkBlB,EAAE,kBACpBmB,kBAAmBnB,EAAE,kBACrBoB,eAAe,EACfC,UAAU,EACVC,mBAAoBR,EACpBS,oBAAqB,kBAAMrB,EAAS,QAAQ,IAGnC,KAATa,GACFP,GAAc,GAEhBO,GACF,GAAG,IACL,EAEA,OACE,SAACS,EAAA,EAAc,WACb,UAAC,KAAe,CACdhC,cAAc,SAAQ,WAEtB,UAAC,KAAO,CACND,MAAM,OACNC,cAAc,SACdC,WAAW,SACXC,eAAe,SACf+B,KAAM,IAAI,WAEV,SAAC,IAAK,CAACC,IAAI,oBAAoBnC,MAAO,IAAKoC,OAAO,OAAOC,IAAI,UAAUC,SAAU,IAChFtB,GACC,SAAC,EAAW,CACVpB,MAAOa,EAAE,kBACTZ,SAAUY,EAAE,wBAEd,SAAC,EAAW,CACVb,MAAOa,EAAE,kBACTZ,SAAUY,EAAE,2BAIlB,SAAC,KAAO,CACNT,MAAM,OACNC,cAAc,SACdC,WAAW,SACXC,eAAe,SACf+B,KAAM,QAKhB,C","sources":["features/kyc/wait-kyc/components/WaitMessage.tsx","features/kyc/wait-kyc/components/WaitKYC.tsx","features/kyc/wait-kyc/index.ts"],"sourcesContent":["import { Box, Fade, Typography } from '@mui/material'\nimport { FlexBox } from 'components/styled'\nimport React from 'react'\n\nfunction WaitMessage({title, subtitle}: MessageProps) {\n  return (\n    <Fade in={true}>\n      <FlexBox\n          width='100%'\n          flexDirection='column'\n          alignItems='center'\n          justifyContent='center'\n          p={2.5}\n        >\n      <Typography variant='h4'>{title || ''}</Typography>\n      <Box pt={1} />\n      <Typography variant='subtitle1'>{subtitle || ''}</Typography>\n      </FlexBox>\n    </Fade>\n  )\n}\n\ntype MessageProps = {\n  title?: string,\n  subtitle?: string\n}\n\nexport default WaitMessage","import alertDialogStore from 'components/AlertDialog/alertDialogStore'\nimport { LayoutSafeArea } from 'components/Layout/LayoutSafeArea'\nimport { FlexBox, FullSizeFlexBox } from 'components/styled'\nimport Image from 'mui-image'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate } from 'react-router-dom'\nimport WaitMessage from './WaitMessage'\n\nfunction WaitKYC() {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const interval = useRef<number | undefined>()\n  const [showSecond, setShowSecond] = useState(false)\n  useEffect(() => {\n    countdown()\n\n    return () => {\n      window.clearInterval(interval.current)\n    }\n  }, [])\n\n  const handleResend = () => {\n\n  }\n\n  const countdown = () => {\n    let time = 90\n\n    interval.current = window.setInterval(() => {\n      if (time === 0) {\n        window.clearInterval(interval.current)\n        alertDialogStore.alertContent = {\n          title: t('waitKYC.alertTitle'),\n          subtitle: t('waitKYC.alertSubtitle'),\n          firstButtonTitle: t('waitKYC.reSend'),\n          secondButtonTitle: t('waitKYC.goHome'),\n          reverseButton: true,\n          isColumn: true,\n          onClickFirstButton: handleResend,\n          onClickSecondButton: () => navigate('/home')\n        }\n      }\n      if (time === 60) {\n        setShowSecond(true)\n      }\n      time--\n    }, 1000)\n  }\n\n  return (\n    <LayoutSafeArea>\n      <FullSizeFlexBox\n        flexDirection='column'\n      >\n        <FlexBox\n          width='100%'\n          flexDirection='column'\n          alignItems='center'\n          justifyContent='center'\n          flex={2.5}\n        >\n          <Image src='images/sample.png' width={120} height='auto' fit='contain' duration={0} />\n          {showSecond ?\n            <WaitMessage\n              title={t('waitKYC.title2')}\n              subtitle={t('waitKYC.subtitle2')}\n            /> :\n            <WaitMessage\n              title={t('waitKYC.title1')}\n              subtitle={t('waitKYC.subtitle1')}\n            />\n          }\n        </FlexBox>\n        <FlexBox\n          width='100%'\n          flexDirection='column'\n          alignItems='center'\n          justifyContent='center'\n          flex={1}\n        />\n      </FullSizeFlexBox>\n    </LayoutSafeArea>\n  )\n}\n\nexport default WaitKYC","import WaitKYC from './components/WaitKYC';\n\nexport default WaitKYC"],"names":["title","subtitle","Fade","in","width","flexDirection","alignItems","justifyContent","p","Typography","variant","Box","pt","t","useTranslation","navigate","useNavigate","interval","useRef","useState","showSecond","setShowSecond","useEffect","countdown","window","clearInterval","current","handleResend","time","setInterval","alertDialogStore","firstButtonTitle","secondButtonTitle","reverseButton","isColumn","onClickFirstButton","onClickSecondButton","LayoutSafeArea","flex","src","height","fit","duration"],"sourceRoot":""}