{"version":3,"file":"static/js/986.9ef133b9.chunk.js","mappings":"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","sources":["hooks/useLongPress.js","features/auth/login/component/ModalChangeEnv.tsx","features/auth/login/component/Login.tsx","features/auth/login/index.ts","utils/greeting-utils.ts","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { useCallback, useRef, useState } from 'react';\n\nconst useLongPress = (\n  onLongPress,\n  onClick,\n  { shouldPreventDefault = true, delay = 300 } = {}\n) => {\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\n  const timeout = useRef();\n  const target = useRef();\n\n  const start = useCallback(\n    event => {\n      if (shouldPreventDefault && event.target) {\n        event.target.addEventListener('touchend', preventDefault, {\n          passive: false\n        });\n        target.current = event.target;\n      }\n      timeout.current = setTimeout(() => {\n        onLongPress(event);\n        setLongPressTriggered(true);\n      }, delay);\n    },\n    [onLongPress, delay, shouldPreventDefault]\n  );\n\n  const clear = useCallback(\n    (event, shouldTriggerClick = true) => {\n      timeout.current && clearTimeout(timeout.current);\n      shouldTriggerClick && !longPressTriggered && onClick();\n      setLongPressTriggered(false);\n      if (shouldPreventDefault && target.current) {\n        target.current.removeEventListener('touchend', preventDefault);\n      }\n    },\n    [shouldPreventDefault, onClick, longPressTriggered]\n  );\n\n  return {\n    onMouseDown: e => start(e),\n    onTouchStart: e => start(e),\n    onMouseUp: e => clear(e),\n    onMouseLeave: e => clear(e, false),\n    onTouchEnd: e => clear(e)\n  };\n};\n\nconst isTouchEvent = event => {\n  return 'touches' in event;\n};\n\nconst preventDefault = event => {\n  if (!isTouchEvent(event)) return;\n\n  if (event.touches.length < 2 && event.preventDefault) {\n    event.preventDefault();\n  }\n};\n\nexport default useLongPress;\n","import { ButtonBase, Dialog, Slide, Typography } from '@mui/material';\nimport { forwardRef, ReactElement, Ref } from 'react';\nimport { TransitionProps } from '@mui/material/transitions';\nimport { changeEnv, setLog } from 'app/app.slice';\nimport { Env } from 'app/app.types';\nimport { authSagaAction } from 'features/auth/states/auth/auth.saga';\nimport { useAppDispatch } from 'app/hooks';\n\nconst Transition = forwardRef((props: TransitionProps & { children: ReactElement<any, any> }, ref: Ref<unknown>) => {\n    return <Slide direction=\"down\" timeout={1000} ref={ref} {...props} />\n})\n\ninterface AlertProps {\n    isOpen: boolean,\n    onClose: (event: object, reason: string) => void\n}\n\nexport const ModalChangeEnv = ({ isOpen, onClose }: AlertProps) => {\n    const dispatch = useAppDispatch()\n\n    return (\n        <Dialog\n            open={isOpen}\n            onClose={onClose}\n            aria-describedby=\"alert-dialog-slide-description\"\n            TransitionComponent={Transition}\n            PaperProps={{ sx: { width: '100%', borderRadius: 4, pb: 2 } }}\n            sx={{ background: 'rgba(18, 18, 18, 0.6)', zIndex: 9999999999 }} // zIndex tạm để - sau này sẽ viết lại popup verifyOTP và sửa lại\n        >\n            <ButtonBase\n                sx={{ mt: 2 }}\n                onClick={() => {\n                    dispatch(changeEnv(Env.DEV))\n                    dispatch(authSagaAction.clientSetup())\n                    onClose({}, 'escapeKeyDown')\n                }}\n            >\n                <Typography>Dev</Typography>\n            </ButtonBase>\n\n            <ButtonBase\n                sx={{ mt: 2 }}\n                onClick={() => {\n                    dispatch(changeEnv(Env.SANDBOX))\n                    dispatch(authSagaAction.clientSetup())\n                    onClose({}, 'escapeKeyDown')\n                }}\n            >\n                <Typography>Sandbox</Typography>\n            </ButtonBase>\n\n            <ButtonBase\n                sx={{ mt: 2 }}\n                onClick={() => {\n                    dispatch(changeEnv(Env.PRODUCTION))\n                    dispatch(authSagaAction.clientSetup())\n                    onClose({}, 'escapeKeyDown')\n                }}\n            >\n                <Typography>Production</Typography>\n            </ButtonBase>\n\n            <ButtonBase\n                sx={{ mt: 2 }}\n                onClick={() => {\n                    dispatch(setLog())\n                    onClose({}, 'escapeKeyDown')\n                }}\n            >\n                <Typography>Show log</Typography>\n            </ButtonBase>\n        </Dialog >\n    )\n}","import { Input, Typography, Box, Fade } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nimport Meta from 'components/Meta';\nimport { FullSizeFlexBox } from 'components/styled';\nimport { useEffect, useRef, useState } from 'react';\nimport VerifyOTP from 'components/VerifyOTP';\n\nimport { useNavigate } from 'react-router-dom';\nimport Header from 'components/Layout/Header';\nimport { useTranslation } from 'react-i18next';\nimport { getTextGreetings } from 'utils/greeting-utils';\nimport { LayoutSafeArea } from 'components/Layout/LayoutSafeArea';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { selectClientId, selectDeviceInfo } from 'app/app.slice';\nimport { authSagaAction } from 'features/auth/states//auth/auth.saga';\nimport { selectAccountInfo, selectLoadingAccountInfo, selectLoadingActiveCode, updateAccountInfo } from 'features/auth/states/account/account.slice';\nimport alertDialogStore from 'components/AlertDialog/alertDialogStore';\nimport { CallbackSendActiveCodeResponse, CallbackVerifyActiveCodeResponse, TYPE_ACTIVE_CODE } from 'features/auth/states/auth/auth.types';\nimport { AccountInfoResponse, CallbackGetInfoResponse } from 'features/auth/states/account/account.types';\nimport { VerifyOTPHandle } from 'components/VerifyOTP/types';\nimport { formatSecondToMin, isValidPhone } from 'utils/format-utils';\nimport { registerSagaAction } from 'features/auth/states/register/register.saga';\nimport { CallbackRegisterVerifyActiveCodeResponse } from 'features/auth/states/register/register.types';\nimport { accountSagaAction } from 'features/auth/states/account/account.saga';\nimport { bridge } from 'app/communicateBridge';\nimport useLongPress from 'hooks/useLongPress';\nimport { ModalChangeEnv } from './ModalChangeEnv';\nimport { jsLog } from 'utils/comunicate';\nimport callCustomerCare from 'utils/callCustomerCare';\n\nfunction Login() {\n  const dispatch = useAppDispatch()\n  const { t } = useTranslation();\n  const navigate = useNavigate()\n  const deviceInfo = useAppSelector(selectDeviceInfo)\n  const clientId = useAppSelector(selectClientId)\n  const loading = useAppSelector(selectLoadingAccountInfo)\n  const loadingVerifyOTP = useAppSelector(selectLoadingActiveCode)\n  const accountInfo = useAppSelector(selectAccountInfo)\n\n  const [phone, setPhone] = useState<string>('');\n  const [isActiveButton, setIsActiveButton] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState('')\n  const [typeActiveCode, setTypeActiveCode] = useState<TYPE_ACTIVE_CODE>()\n  const [clickCount, setClickCount] = useState<number>(0)\n  const [isOpenChangeEnv, setIsOpenChangeEnv] = useState<boolean>(false)\n\n  const verifyOTPRef = useRef<VerifyOTPHandle>(null)\n\n  const onLongPress = () => {\n    console.log('longpress is triggered');\n  };\n\n  const onClick = () => {\n    setClickCount(clickCount + 1)\n\n    if (clickCount === 5) {\n      setIsOpenChangeEnv(true)\n      setClickCount(0)\n    }\n  }\n\n  const defaultOptions = {\n    shouldPreventDefault: true,\n    delay: 1000,\n  };\n\n  const longPressEvent = useLongPress(onLongPress, onClick, defaultOptions);\n\n  useEffect(() => {\n    if (phone) {\n      setIsActiveButton(true);\n    } else {\n      setIsActiveButton(false);\n    }\n  }, [phone]);\n\n  const onSubmit = () => {\n    const errorPhone = isValidPhone(phone)\n    if (!errorPhone) {\n      setErrorMessage('')\n\n      // TODO\n      // Gọi api get account để check sđt có tồn tại chưa\n      dispatch(accountSagaAction.getInfo({ phone, clientId }, (status: boolean, response: CallbackGetInfoResponse) => {\n        if (status) {\n          if (response?.code === 204200) { // account đã trust device trước đó\n            dispatch(updateAccountInfo({ ...response?.data?.accountInfo, isTrustDevice: true })) //Lưu trust device\n            bridge.next({\n              type: 'jsPreferences',\n              data: {\n                accountInfo: { ...response?.data?.accountInfo, isTrustDevice: true }\n              }\n            })\n            jsLog({\n              accountInfo: response?.data?.accountInfo\n            })\n            if (response?.data?.accountInfo?.accountId) {\n              navigate('/login-step2')\n            }\n          } else if (response?.code === 204205) { // Tài khoản mới chưa đăng kí\n            setTypeActiveCode(TYPE_ACTIVE_CODE.REGISTER)\n            dispatch(authSagaAction.sendActiveCode({\n              phone,\n              clientId,\n              type: TYPE_ACTIVE_CODE.REGISTER\n            }, (status: boolean, response: CallbackSendActiveCodeResponse) => {\n              if (status) {\n                if (response.code === 204200) {\n                  verifyOTPRef.current?.open()\n                  verifyOTPRef.current?.setExpired(new Date().getTime() + (1 * 60000))\n                } else if (response.code === 204203) {\n                  verifyOTPRef.current?.open()\n                  verifyOTPRef.current?.setExpired(new Date().getTime() + (response.data.remainingTime || (1 * 60000)))\n                } else {\n                  alertDialogStore.alertContent = {\n                    title: 'Lỗi kết nối',\n                    subtitle: response.message,\n                    firstButtonTitle: 'Đã hiểu'\n                  }\n                }\n              }\n            }))\n          } else if (response?.code === 204204) { // account đã tồn tại nhưng chưa trust device\n            bridge.next({\n              type: 'jsPreferences',\n              data: {\n                accountInfo: response?.data?.accountInfo\n              }\n            })\n            jsLog({\n              accountInfo: response?.data?.accountInfo\n            })\n            dispatch(updateAccountInfo(response?.data?.accountInfo))\n            if (response.data.accountInfo.accountId) {\n              setTypeActiveCode(TYPE_ACTIVE_CODE.TRUST_DEVICE)\n              dispatch(authSagaAction.sendActiveCode({\n                phone,\n                clientId,\n                type: TYPE_ACTIVE_CODE.TRUST_DEVICE\n              }, (status: boolean, response: CallbackSendActiveCodeResponse) => {\n                if (status) {\n                  if (response.code === 204200) {\n                    verifyOTPRef.current?.open()\n                    verifyOTPRef.current?.setExpired(new Date().getTime() + (1 * 60000))\n                  } else if (response.code === 204203) {\n                    const remainingTime = formatSecondToMin(response.data.remainingTime || 0)\n                    alertDialogStore.alertContent = {\n                      title: `Bạn đã nhập sai OTP ${response.data.times || 'nhiều'} lần`,\n                      subtitle: ['Nhận OTP mới sau', remainingTime, 'hoặc liên hệ CSKH ngay để được hỗ trợ.'],\n                      firstButtonTitle: 'Liên hệ CSKH',\n                      secondButtonTitle: 'Thử lại sau',\n                      reverseButton: true,\n                      onClickFirstButton: () => callCustomerCare(),\n                      onClickSecondButton: () => verifyOTPRef.current?.close()\n                    }\n                  } else {\n                    alertDialogStore.alertContent = {\n                      title: 'Lỗi kết nối',\n                      subtitle: response.message,\n                      firstButtonTitle: 'Đã hiểu'\n                    }\n                  }\n                }\n              }))\n            }\n          } else if (response.code === 204207) {\n            alertDialogStore.alertContent = {\n              title: 'Tài khoản của bạn đã bị khoá',\n              subtitle: 'Liên hệ CSKH ngay để được hỗ trợ',\n              firstButtonTitle: 'Liên hệ CSKH',\n              onClickFirstButton: () => callCustomerCare(),\n            }\n          } else { // Lỗi\n            setErrorMessage(response.message)\n          }\n        } else {\n          setErrorMessage(response.message)\n        }\n      }))\n    } else {\n      setErrorMessage(t(errorPhone))\n    }\n  };\n\n  const handleVerifyOTP = (value?: string) => {\n    if (value) {\n      if (typeActiveCode === TYPE_ACTIVE_CODE.TRUST_DEVICE) { // Verify OTP trường hợp Trust Device\n        dispatch(authSagaAction.verifyActiveCode({\n          phone,\n          clientId,\n          activeCode: value\n        }, (status: boolean, response: CallbackVerifyActiveCodeResponse) => {\n          if (status) {\n            if (response.code === 204400) {\n              //Update trust device\n              dispatch(updateAccountInfo({ ...accountInfo as AccountInfoResponse, isTrustDevice: true }))\n              bridge.next({\n                type: 'jsPreferences',\n                data: {\n                  accountInfo: { ...accountInfo, isTrustDevice: true }\n                }\n              })\n              jsLog({ accountInfo })\n              navigate(`/login-step2?activeCode=${value}`)\n            } else if (response.code === 204404) {\n              const remainingTime = formatSecondToMin(response.data.remainingTime || 0)\n              alertDialogStore.alertContent = {\n                title: `Bạn đã nhập sai OTP ${response.data.times || 'nhiều'} lần`,\n                subtitle: ['Nhận OTP mới sau', remainingTime, 'hoặc liên hệ CSKH ngay để được hỗ trợ.'],\n                firstButtonTitle: 'Liên hệ CSKH',\n                secondButtonTitle: 'Thử lại sau',\n                reverseButton: true,\n                onClickFirstButton: () => callCustomerCare(),\n                onClickSecondButton: () => verifyOTPRef.current?.close()\n              }\n            } else {\n              verifyOTPRef.current?.setErrorMessage(response.message)\n              verifyOTPRef.current?.showError()\n            }\n          }\n        }))\n      } else if (typeActiveCode === TYPE_ACTIVE_CODE.REGISTER) { // Verify OTP trường hợp đăng kí mới\n        dispatch(registerSagaAction.registerVerifyActiveCode({\n          phone,\n          clientId,\n          activeCode: value\n        }, (status: boolean, response: CallbackRegisterVerifyActiveCodeResponse) => {\n          if (status) {\n            if (response.code === 204500) {\n              navigate(`/create-pin?phone=${phone}&activeCode=${value}`)\n            } else if (response.code === 204513) {\n              const remainingTime = formatSecondToMin(response.data.remainingTime || 0)\n              alertDialogStore.alertContent = {\n                title: `Bạn đã nhập sai OTP ${response.data.times || 'nhiều'} lần`,\n                subtitle: ['Nhận OTP mới sau', remainingTime, 'hoặc liên hệ CSKH ngay để được hỗ trợ.'],\n                firstButtonTitle: 'Liên hệ CSKH',\n                secondButtonTitle: 'Thử lại sau',\n                reverseButton: true,\n                onClickFirstButton: () => callCustomerCare(),\n                onClickSecondButton: () => verifyOTPRef.current?.close()\n              }\n            } else {\n              verifyOTPRef.current?.setErrorMessage(response.message)\n              verifyOTPRef.current?.showError()\n            }\n          }\n        }))\n      }\n    }\n  };\n\n  return (\n    <LayoutSafeArea>\n      <Meta title=\"Login\" />\n      <FullSizeFlexBox\n        padding={2.5}\n        paddingTop={(deviceInfo?.platform?.toUpperCase() === 'IOS' || deviceInfo?.platform?.toUpperCase() === 'ANDROID') ? 0 : 2.5}\n        paddingBottom={(deviceInfo?.platform?.toUpperCase() === 'IOS' || deviceInfo?.platform?.toUpperCase() === 'ANDROID') ? 0 : 2.5}\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n      >\n        <Box>\n          <Header />\n          <Box sx={{ paddingTop: 2.5 }} />\n          <Typography {...longPressEvent} variant='h2' textAlign='left' color='text.secondary'>\n            {t(getTextGreetings())}\n          </Typography>\n          <Box sx={{ fontSize: 24, fontWeight: 'bold', color: window.location.hostname.includes('ngrok') ? 'yellow' : 'black' }}>\n            {t('auth.yourPhone')}\n          </Box>\n          <Input\n            inputProps={{\n              maxLength: 12,\n              inputMode: 'numeric',\n              pattern: '[0-9]*',\n            }}\n            sx={{ \n              color: 'text.secondary',\n              caretColor: 'tex.secondary !important',\n            }}\n            fullWidth\n            placeholder=\"097xxxxxx\"\n            disableUnderline={true}\n            autoFocus\n            type=\"tel\"\n            value={phone}\n            onChange={(e) => {\n              setErrorMessage('')\n              setPhone(e?.target?.value?.replace(/[^0-9]/g, ''))\n            }}\n          />\n          <Box mt={1} />\n          <Fade in={!!errorMessage} timeout={300}>\n            <Typography variant='subtitle2' color='text.danger' textAlign='left'>{errorMessage}</Typography>\n          </Fade>\n        </Box>\n        <LoadingButton\n          disabled={!isActiveButton}\n          loading={loading}\n          loadingIndicator={`${t('pleaseWait')}`}\n          variant=\"contained\"\n          disableElevation\n          onClick={onSubmit}\n        >\n          {t('continue')}\n        </LoadingButton>\n      </FullSizeFlexBox>\n      <VerifyOTP\n        ref={verifyOTPRef}\n        loadingVerifyOTP={loadingVerifyOTP}\n        title={t('auth.verifyOTP')}\n        phone={phone}\n        onSubmit={handleVerifyOTP}\n        onResend={() => {\n          dispatch(authSagaAction.sendActiveCode({\n            phone,\n            clientId,\n            type: typeActiveCode === TYPE_ACTIVE_CODE.REGISTER ? TYPE_ACTIVE_CODE.REGISTER : TYPE_ACTIVE_CODE.TRUST_DEVICE\n          }, (status: boolean, response: CallbackSendActiveCodeResponse) => {\n            if (status) {\n              if (response.code === 204200) {\n                verifyOTPRef.current?.setExpired(new Date().getTime() + (1 * 60000))\n              } else if (response.code === 204203) {\n                verifyOTPRef.current?.setExpired(new Date().getTime() + (response.data.remainingTime || (1 * 60000)))\n              } else if (response.code === 204207) {\n                const remainingTime = formatSecondToMin(response.data.remainingTime || 0)\n                alertDialogStore.alertContent = {\n                  title: `Bạn đã nhập sai OTP ${response.data.times || 'nhiều'} lần`,\n                  subtitle: ['Nhận OTP mới sau', remainingTime, 'hoặc liên hệ CSKH ngay để được hỗ trợ.'],\n                  firstButtonTitle: 'Liên hệ CSKH',\n                  secondButtonTitle: 'Thử lại sau',\n                  reverseButton: true,\n                  onClickFirstButton: () => callCustomerCare(),\n                  onClickSecondButton: () => verifyOTPRef.current?.close()\n                }\n              } else {\n                alertDialogStore.alertContent = {\n                  title: 'Lỗi kết nối',\n                  subtitle: response.message,\n                  firstButtonTitle: 'Đã hiểu'\n                }\n              }\n            }\n          }))\n        }}\n      />\n\n      <ModalChangeEnv isOpen={isOpenChangeEnv}\n        onClose={(_, reason) => {\n          if (reason !== 'backdropClick') {\n            setIsOpenChangeEnv(false)\n          }\n        }} />\n    </LayoutSafeArea>\n  );\n}\n\nexport default Login;\n","import Login from './component/Login';\n\nexport default Login;\n","export const getTextGreetings = () => {\n  const h = new Date().getHours();\n  if (h >= 0 && h < 11) return 'auth.goodMorning'\n  if (h < 14) return 'auth.goodAfternoon1'\n  if (h < 18) return 'auth.goodAfternoon2'\n  return 'auth.goodEvening'\n}\n\nexport const getGreetingName = (name: string) : string => {\n  const text = name.split(' ')\n  if (text.length <= 2) return name || ''\n\n  return text.slice(-2).join(' ')\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    id: idProp,\n    loading = false,\n    loadingIndicator: loadingIndicatorProp,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;"],"names":["preventDefault","event","isTouchEvent","touches","length","onLongPress","onClick","shouldPreventDefault","delay","useState","longPressTriggered","setLongPressTriggered","timeout","useRef","target","start","useCallback","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","e","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","Transition","forwardRef","props","ref","Slide","direction","ModalChangeEnv","isOpen","onClose","dispatch","useAppDispatch","Dialog","open","TransitionComponent","PaperProps","sx","width","borderRadius","pb","background","zIndex","ButtonBase","mt","changeEnv","Env","authSagaAction","Typography","setLog","t","useTranslation","navigate","useNavigate","deviceInfo","useAppSelector","selectDeviceInfo","clientId","selectClientId","loading","selectLoadingAccountInfo","loadingVerifyOTP","selectLoadingActiveCode","accountInfo","selectAccountInfo","phone","setPhone","isActiveButton","setIsActiveButton","errorMessage","setErrorMessage","typeActiveCode","setTypeActiveCode","clickCount","setClickCount","isOpenChangeEnv","setIsOpenChangeEnv","verifyOTPRef","longPressEvent","useLongPress","console","log","useEffect","LayoutSafeArea","Meta","title","padding","paddingTop","platform","toUpperCase","paddingBottom","display","flexDirection","justifyContent","Box","Header","variant","textAlign","color","getTextGreetings","fontSize","fontWeight","window","location","hostname","includes","Input","inputProps","maxLength","inputMode","pattern","caretColor","fullWidth","placeholder","disableUnderline","autoFocus","type","value","onChange","replace","Fade","in","LoadingButton","disabled","loadingIndicator","disableElevation","errorPhone","isValidPhone","accountSagaAction","status","response","code","updateAccountInfo","data","isTrustDevice","bridge","jsLog","accountId","TYPE_ACTIVE_CODE","setExpired","Date","getTime","remainingTime","alertDialogStore","subtitle","message","firstButtonTitle","formatSecondToMin","times","secondButtonTitle","reverseButton","onClickFirstButton","callCustomerCare","onClickSecondButton","close","VerifyOTP","onSubmit","activeCode","showError","registerSagaAction","onResend","_","reason","h","getHours","getGreetingName","name","text","split","slice","join","getLoadingButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","root","startIconLoadingStart","loadingButtonClasses","endIconLoadingEnd","ownerState","theme","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","marginRight","marginLeft","LoadingButtonLoadingIndicator","capitalize","position","visibility","left","size","transform","vars","palette","action","right","React","inProps","useThemeProps","children","idProp","id","loadingIndicatorProp","other","_objectWithoutPropertiesLoose","useId","_jsx","CircularProgress","classes","slots","startIcon","endIcon","composedClasses","composeClasses","useUtilityClasses","loadingButtonLoadingIndicator","className","_jsxs"],"sourceRoot":""}