{"version":3,"file":"static/js/898.7383a1b6.chunk.js","mappings":"iWAwJA,ICtJA,EDWA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,KAAND,EACR,GAAuBE,EAAAA,EAAAA,MAAhBC,GAAiC,YAArB,GACbC,EAAQD,EAAaE,IAAI,gBACzBC,EAAOH,EAAaE,IAAI,QAE9B,OACE,UAACE,EAAA,EAAc,YACb,SAACC,EAAA,EAAI,CAACC,MAAM,mBACZ,UAAC,KAAuB,CACtBC,GAAI,CACFC,WAAY,IACZC,cAAe,IACfC,eAAgB,gBAChBC,OAAQ,QACRC,SAAU,SACVC,UAAW,QAEbC,QAAQ,OACRC,cAAc,SAAQ,WAEtB,UAACC,EAAA,EAAG,CAACC,MAAM,OAAOC,GAAI,IAAKC,GAAI,IAAI,WACjC,SAACC,EAAA,EAAM,CACLC,YAAU,EACVC,QAAS,kBAAM3B,GAAU,EAAE,EAC3BW,MAAOT,EAAE,yBAEX,SAACmB,EAAA,EAAG,CAACT,GAAI,CAAEC,WAAY,QACvB,SAAC,IAAK,CACJe,IAAKtB,EACLuB,SAAU,EACVP,MAAM,OACNN,OAAO,OACPc,IAAI,UACJC,MAAO,CACLC,aAAc,OAGlB,SAACX,EAAA,EAAG,CAACT,GAAI,CAAEC,WAAY,QACvB,SAACoB,EAAA,EAAU,CACTC,QAAQ,YACRC,WAAW,MACXC,MAAM,eACNC,UAAU,SAAQ,uHAGtB,UAAC,KAAO,CAACjB,cAAc,MAAME,MAAM,OAAOC,GAAI,IAAKC,GAAI,IAAI,WACzD,SAACc,EAAA,EAAM,CACLC,WAAS,EACTL,QAAQ,WACRP,QAAS,WACM,UAATnB,EACFgC,EAAAA,EAAAA,KAAY,CACVhC,KAAM,mBACNiC,KAAM,CACJ9B,MAAO,+CACPH,KAAM,QACNkC,YAAa,kFAIjBF,EAAAA,EAAAA,KAAY,CACVhC,KAAM,mBACNiC,KAAM,CACJ9B,MAAO,mCACPH,KAAM,OACNkC,YAAa,qEAIrB,EAAE,SAEDxC,EAAE,6BAEL,SAACmB,EAAA,EAAG,CAACE,GAAI,OACT,SAACe,EAAA,EAAM,CACLC,WAAS,EACTL,QAAQ,YACRP,QAAS,WACM,UAATnB,GACGmC,EAAAA,EAAAA,IAAYrC,GAafkC,EAAAA,EAAAA,KAAY,CACVhC,KAAM,mBACNiC,KAAM,CACJ9B,MAAO,+CACPH,KAAM,QACNkC,YAAa,+EACbE,WAAY,mGAlBhB9C,GAAS+C,EAAAA,EAAAA,IAAe,CACtBC,MAAOxC,KAETkC,EAAAA,EAAAA,KAAY,CACVhC,KAAM,mBACNiC,KAAM,CACJ9B,MAAO,mCACPH,KAAM,OACNkC,YAAa,wEAedC,EAAAA,EAAAA,IAAYrC,GAYfkC,EAAAA,EAAAA,KAAY,CACVhC,KAAM,mBACNiC,KAAM,CACJ9B,MAAO,mCACPH,KAAM,OACNkC,YAAa,mEACbE,WAAY,mGAjBhB9C,GAAS+C,EAAAA,EAAAA,IAAe,CACtBE,KAAMzC,KAERkC,EAAAA,EAAAA,KAAY,CACVhC,KAAM,mBACNiC,KAAM,CACJ9B,MAAO,qCACPqC,MAAO,CAAC,mCAAyB,mFAA2C,uEAetF,EAAE,SAED9C,EAAE,kCAMf,C","sources":["features/kyc/confirm-photo/components/ConfirmPhoto.tsx","features/kyc/confirm-photo/index.ts"],"sourcesContent":["import { Box, Button, Typography } from '@mui/material'\nimport { bridge } from 'app/communicateBridge'\nimport { useAppDispatch } from 'app/hooks'\nimport Header from 'components/Layout/Header'\nimport { LayoutSafeArea } from 'components/Layout/LayoutSafeArea'\nimport Meta from 'components/Meta'\nimport { FlexBox, FullSizeCenteredFlexBox } from 'components/styled'\nimport { updateImageKYC } from 'features/kyc/states/kyc.slice'\nimport Image from 'mui-image'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { isBlurImage } from 'utils/format-utils'\n\nfunction ConfirmPhoto() {\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n  const { t } = useTranslation()\n  const [searchParams] = useSearchParams()\n  const image = searchParams.get('searchParams') as string\n  const type = searchParams.get('type')\n\n  return (\n    <LayoutSafeArea>\n      <Meta title='KYC Introduce' />\n      <FullSizeCenteredFlexBox\n        sx={{\n          paddingTop: 2.5,\n          paddingBottom: 2.5,\n          justifyContent: 'space-between',\n          height: '100vh',\n          overflow: 'scroll',\n          scrollbar: 'none'\n        }}\n        display=\"flex\"\n        flexDirection=\"column\"\n      >\n        <Box width='100%' pl={2.5} pr={2.5} >\n          <Header\n            isIconBack\n            onClick={() => navigate(-1)}\n            title={t('confirmPhoto.title')}\n          />\n          <Box sx={{ paddingTop: 2.5 }} />\n          <Image\n            src={image}\n            duration={0}\n            width='100%'\n            height='auto'\n            fit='contain'\n            style={{\n              borderRadius: 16,\n            }}\n          />\n          <Box sx={{ paddingTop: 2.5 }} />\n          <Typography\n            variant='subtitle1'\n            fontWeight='500'\n            color='text.primary'\n            textAlign='center'\n          >Đảm bảo ảnh chụp rõ nét và đầy đủ thông tin.</Typography>\n        </Box>\n        <FlexBox flexDirection='row' width='100%' pl={2.5} pr={2.5}>\n          <Button\n            fullWidth\n            variant='outlined'\n            onClick={() => {\n              if (type === 'FRONT') {\n                bridge.next({\n                  type: 'jsRequestCardKYC',\n                  data: {\n                    title: 'Chụp mặt trước CMND/CCCD',\n                    type: 'FRONT',\n                    description: 'Cân chỉnh mặt trước CMND/CCCD vào giữa khung.',\n                  }\n                })\n              } else {\n                bridge.next({\n                  type: 'jsRequestCardKYC',\n                  data: {\n                    title: 'Chụp mặt sau CMND/CCCD',\n                    type: 'BACK',\n                    description: 'Cân chỉnh mặt sau CMND/CCCD vào giữa khung.',\n                  }\n                })\n              }\n            }}\n          >\n            {t('confirmPhoto.reCapture')}\n          </Button>\n          <Box pl={1.5} />\n          <Button\n            fullWidth\n            variant='contained'\n            onClick={() => {\n              if (type === 'FRONT') {\n                if (!isBlurImage(image)) {\n                  dispatch(updateImageKYC({\n                    front: image,\n                  }))\n                  bridge.next({\n                    type: 'jsRequestCardKYC',\n                    data: {\n                      title: 'Chụp mặt sau CMND/CCCD',\n                      type: 'BACK',\n                      description: 'Cân chỉnh mặt sau CMND/CCCD vào giữa khung.',\n                    }\n                  })\n                } else {\n                  bridge.next({\n                    type: 'jsRequestCardKYC',\n                    data: {\n                      title: 'Chụp mặt trước CMND/CCCD',\n                      type: 'FRONT',\n                      description: 'Cân chỉnh mặt trước CMND/CCCD vào giữa khung.',\n                      toastError: 'Ảnh giấy tờ bị nhoè. Bạn kiểm tra và chụp lại.'\n                    }\n                  })\n                }\n              } else {\n                if (!isBlurImage(image)) {\n                  dispatch(updateImageKYC({\n                    back: image,\n                  }))\n                  bridge.next({\n                    type: 'jsRequestFaceKYC',\n                    data: {\n                      title: 'Xác thực khuôn mặt',\n                      hints: ['Nhìn thẳng vào camera', 'Tốt lắm! Bây giờ bạn hãy chớp mắt 1 lần', 'Cuối cùng hãy cười thật tươi'],\n                    }\n                  })\n                } else {\n                  bridge.next({\n                    type: 'jsRequestCardKYC',\n                    data: {\n                      title: 'Chụp mặt sau CMND/CCCD',\n                      type: 'BACK',\n                      description: 'Cân chỉnh mặt sau CMND/CCCD vào giữa khung.',\n                      toastError: 'Ảnh giấy tờ bị nhoè. Bạn kiểm tra và chụp lại.'\n                    }\n                  })\n                }\n              }\n            }}\n          >\n            {t('confirmPhoto.confirm')}\n          </Button>\n        </FlexBox>\n      </FullSizeCenteredFlexBox>\n    </LayoutSafeArea>\n  )\n}\n\nexport default ConfirmPhoto","import ConfirmPhoto from './components/ConfirmPhoto';\n\nexport default ConfirmPhoto"],"names":["dispatch","useAppDispatch","navigate","useNavigate","t","useTranslation","useSearchParams","searchParams","image","get","type","LayoutSafeArea","Meta","title","sx","paddingTop","paddingBottom","justifyContent","height","overflow","scrollbar","display","flexDirection","Box","width","pl","pr","Header","isIconBack","onClick","src","duration","fit","style","borderRadius","Typography","variant","fontWeight","color","textAlign","Button","fullWidth","bridge","data","description","isBlurImage","toastError","updateImageKYC","front","back","hints"],"sourceRoot":""}